minimumLimaVersion: 1.1.0

containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    command -v podman >/dev/null 2>&1 && test -e /etc/lima-podman && exit 0
    if [ ! -e /etc/systemd/system/podman.socket.d/override.conf ]; then
      mkdir -p /etc/systemd/system/podman.socket.d
      cat <<-EOF >/etc/systemd/system/podman.socket.d/override.conf
      [Socket]
      SocketUser={{.User}}
    EOF
    fi
    if [ ! -e /etc/tmpfiles.d/podman.conf ]; then
      mkdir -p /etc/tmpfiles.d
      echo "d /run/podman 0700 {{.User}} -" > /etc/tmpfiles.d/podman.conf
    fi
    apt install -y podman crun && touch /etc/lima-podman
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    systemctl --system enable --now podman.socket
- mode: user
  script: |
    #!/bin/bash
    set -euxo pipefail
    if command -v kind >/dev/null 2>&1 && sudo kind get clusters | grep -q "^multinode$"; then
      sudo podman start --all && sleep 60
    else
      [ "$(uname -m)" = aarch64 ] && curl -s -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-arm64
      chmod +x ./kind
      sudo mv ./kind /usr/local/bin/kind
      sudo kind create cluster --name multinode --config=/common/kind-config.yaml
      mkdir -p ~/.kube
      sudo kind get kubeconfig --name multinode > ~/.kube/config
    fi
- mode: user
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! command -v kubectl >/dev/null 2>&1; then
      sudo apt-get install apt-transport-https --yes
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
      sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
      sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list   # helps tools such as command-not-found to work correctly
      sudo apt-get update
      sudo apt-get install -y kubectl helm
    else
      echo "kubectl is already installed"
    fi

images:
- location: https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-arm64.qcow2
  arch: aarch64
  digest: sha512:95f72a3dbc9bbe261aee622ffe0c1b89085d843c9631b720738557a3640e229847deee7f0f87a29b566bf56ba7ecdc9010fb4b844c3477ca76a00865cf016fc1

mountTypesUnsupported: [9p]
mounts:
- location: "~"
- location: "/opt/lima/common"
  mountPoint: /common
  writable: false
- location: "/opt/lima/storage"
  mountPoint: /storage
  writable: true
- location: "{{.GlobalTempDir}}/lima"
  mountPoint: /tmp/lima
  writable: true

cpus: 4
memory: 4GiB
networks:
- lima: shared
  macAddress: "52:55:55:12:34:09"
arch: aarch64
disk: 40GiB
vmType: qemu
